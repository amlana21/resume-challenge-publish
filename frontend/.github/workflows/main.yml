name: Deploy_portfolioapp_Frontend


on:
  push:
    branches:
    - main

jobs:

  build:
    runs-on: ubuntu-20.04
    container:
       image: <custom_docker_image>
      credentials:
        username: <priv_registry_username>
        password: <priv_registry_password>
      env:
        CI: false
    steps:
        - uses: actions/checkout@main

        - name: BuildTest
          run: |
            npm i --legacy-peer-deps
            npm run build


  deploy_infra:
    if: success()
    needs: build
    runs-on: ubuntu-20.04
    container:
       image: <custom_docker_image>
      credentials:
        username: <priv_registry_username>
        password: <priv_registry_password>
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
    steps:
        - uses: actions/checkout@main

        - name: Deploy_Infra
          run: |
            aws cloudformation deploy --stack-name FrontAppInfraStack --template-file CFInfra.yml --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM

  build_deploy:
    if: success()
    needs: [build,deploy_infra]
    runs-on: ubuntu-20.04
    container:
       image: <custom_docker_image>
      credentials:
        username: <priv_registry_username>
        password: <priv_registry_password>
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
        CI: false
    steps:
        - uses: actions/checkout@main

        - name: Build
          run: |
            npm i --legacy-peer-deps
            npm run build
            aws s3 cp ./build s3://<bucket_name>/ --recursive
